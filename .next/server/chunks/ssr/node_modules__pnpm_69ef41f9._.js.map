{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///Users/vihuy/Downloads/Project/financial_advisor/nextjs-ai-chatbot-main/nextjs-ai-chatbot-main/node_modules/.pnpm/cose-base%401.0.3/node_modules/cose-base/cose-base.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"layout-base\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"layout-base\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"coseBase\"] = factory(require(\"layout-base\"));\n\telse\n\t\troot[\"coseBase\"] = factory(root[\"layoutBase\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 7);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar FDLayoutConstants = __webpack_require__(0).FDLayoutConstants;\n\nfunction CoSEConstants() {}\n\n//CoSEConstants inherits static props in FDLayoutConstants\nfor (var prop in FDLayoutConstants) {\n  CoSEConstants[prop] = FDLayoutConstants[prop];\n}\n\nCoSEConstants.DEFAULT_USE_MULTI_LEVEL_SCALING = false;\nCoSEConstants.DEFAULT_RADIAL_SEPARATION = FDLayoutConstants.DEFAULT_EDGE_LENGTH;\nCoSEConstants.DEFAULT_COMPONENT_SEPERATION = 60;\nCoSEConstants.TILE = true;\nCoSEConstants.TILING_PADDING_VERTICAL = 10;\nCoSEConstants.TILING_PADDING_HORIZONTAL = 10;\nCoSEConstants.TREE_REDUCTION_ON_INCREMENTAL = false; // make this true when cose is used incrementally as a part of other non-incremental layout\n\nmodule.exports = CoSEConstants;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar FDLayoutEdge = __webpack_require__(0).FDLayoutEdge;\n\nfunction CoSEEdge(source, target, vEdge) {\n  FDLayoutEdge.call(this, source, target, vEdge);\n}\n\nCoSEEdge.prototype = Object.create(FDLayoutEdge.prototype);\nfor (var prop in FDLayoutEdge) {\n  CoSEEdge[prop] = FDLayoutEdge[prop];\n}\n\nmodule.exports = CoSEEdge;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LGraph = __webpack_require__(0).LGraph;\n\nfunction CoSEGraph(parent, graphMgr, vGraph) {\n  LGraph.call(this, parent, graphMgr, vGraph);\n}\n\nCoSEGraph.prototype = Object.create(LGraph.prototype);\nfor (var prop in LGraph) {\n  CoSEGraph[prop] = LGraph[prop];\n}\n\nmodule.exports = CoSEGraph;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LGraphManager = __webpack_require__(0).LGraphManager;\n\nfunction CoSEGraphManager(layout) {\n  LGraphManager.call(this, layout);\n}\n\nCoSEGraphManager.prototype = Object.create(LGraphManager.prototype);\nfor (var prop in LGraphManager) {\n  CoSEGraphManager[prop] = LGraphManager[prop];\n}\n\nmodule.exports = CoSEGraphManager;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar FDLayoutNode = __webpack_require__(0).FDLayoutNode;\nvar IMath = __webpack_require__(0).IMath;\n\nfunction CoSENode(gm, loc, size, vNode) {\n  FDLayoutNode.call(this, gm, loc, size, vNode);\n}\n\nCoSENode.prototype = Object.create(FDLayoutNode.prototype);\nfor (var prop in FDLayoutNode) {\n  CoSENode[prop] = FDLayoutNode[prop];\n}\n\nCoSENode.prototype.move = function () {\n  var layout = this.graphManager.getLayout();\n  this.displacementX = layout.coolingFactor * (this.springForceX + this.repulsionForceX + this.gravitationForceX) / this.noOfChildren;\n  this.displacementY = layout.coolingFactor * (this.springForceY + this.repulsionForceY + this.gravitationForceY) / this.noOfChildren;\n\n  if (Math.abs(this.displacementX) > layout.coolingFactor * layout.maxNodeDisplacement) {\n    this.displacementX = layout.coolingFactor * layout.maxNodeDisplacement * IMath.sign(this.displacementX);\n  }\n\n  if (Math.abs(this.displacementY) > layout.coolingFactor * layout.maxNodeDisplacement) {\n    this.displacementY = layout.coolingFactor * layout.maxNodeDisplacement * IMath.sign(this.displacementY);\n  }\n\n  // a simple node, just move it\n  if (this.child == null) {\n    this.moveBy(this.displacementX, this.displacementY);\n  }\n  // an empty compound node, again just move it\n  else if (this.child.getNodes().length == 0) {\n      this.moveBy(this.displacementX, this.displacementY);\n    }\n    // non-empty compound node, propogate movement to children as well\n    else {\n        this.propogateDisplacementToChildren(this.displacementX, this.displacementY);\n      }\n\n  layout.totalDisplacement += Math.abs(this.displacementX) + Math.abs(this.displacementY);\n\n  this.springForceX = 0;\n  this.springForceY = 0;\n  this.repulsionForceX = 0;\n  this.repulsionForceY = 0;\n  this.gravitationForceX = 0;\n  this.gravitationForceY = 0;\n  this.displacementX = 0;\n  this.displacementY = 0;\n};\n\nCoSENode.prototype.propogateDisplacementToChildren = function (dX, dY) {\n  var nodes = this.getChild().getNodes();\n  var node;\n  for (var i = 0; i < nodes.length; i++) {\n    node = nodes[i];\n    if (node.getChild() == null) {\n      node.moveBy(dX, dY);\n      node.displacementX += dX;\n      node.displacementY += dY;\n    } else {\n      node.propogateDisplacementToChildren(dX, dY);\n    }\n  }\n};\n\nCoSENode.prototype.setPred1 = function (pred1) {\n  this.pred1 = pred1;\n};\n\nCoSENode.prototype.getPred1 = function () {\n  return pred1;\n};\n\nCoSENode.prototype.getPred2 = function () {\n  return pred2;\n};\n\nCoSENode.prototype.setNext = function (next) {\n  this.next = next;\n};\n\nCoSENode.prototype.getNext = function () {\n  return next;\n};\n\nCoSENode.prototype.setProcessed = function (processed) {\n  this.processed = processed;\n};\n\nCoSENode.prototype.isProcessed = function () {\n  return processed;\n};\n\nmodule.exports = CoSENode;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar FDLayout = __webpack_require__(0).FDLayout;\nvar CoSEGraphManager = __webpack_require__(4);\nvar CoSEGraph = __webpack_require__(3);\nvar CoSENode = __webpack_require__(5);\nvar CoSEEdge = __webpack_require__(2);\nvar CoSEConstants = __webpack_require__(1);\nvar FDLayoutConstants = __webpack_require__(0).FDLayoutConstants;\nvar LayoutConstants = __webpack_require__(0).LayoutConstants;\nvar Point = __webpack_require__(0).Point;\nvar PointD = __webpack_require__(0).PointD;\nvar Layout = __webpack_require__(0).Layout;\nvar Integer = __webpack_require__(0).Integer;\nvar IGeometry = __webpack_require__(0).IGeometry;\nvar LGraph = __webpack_require__(0).LGraph;\nvar Transform = __webpack_require__(0).Transform;\n\nfunction CoSELayout() {\n  FDLayout.call(this);\n\n  this.toBeTiled = {}; // Memorize if a node is to be tiled or is tiled\n}\n\nCoSELayout.prototype = Object.create(FDLayout.prototype);\n\nfor (var prop in FDLayout) {\n  CoSELayout[prop] = FDLayout[prop];\n}\n\nCoSELayout.prototype.newGraphManager = function () {\n  var gm = new CoSEGraphManager(this);\n  this.graphManager = gm;\n  return gm;\n};\n\nCoSELayout.prototype.newGraph = function (vGraph) {\n  return new CoSEGraph(null, this.graphManager, vGraph);\n};\n\nCoSELayout.prototype.newNode = function (vNode) {\n  return new CoSENode(this.graphManager, vNode);\n};\n\nCoSELayout.prototype.newEdge = function (vEdge) {\n  return new CoSEEdge(null, null, vEdge);\n};\n\nCoSELayout.prototype.initParameters = function () {\n  FDLayout.prototype.initParameters.call(this, arguments);\n  if (!this.isSubLayout) {\n    if (CoSEConstants.DEFAULT_EDGE_LENGTH < 10) {\n      this.idealEdgeLength = 10;\n    } else {\n      this.idealEdgeLength = CoSEConstants.DEFAULT_EDGE_LENGTH;\n    }\n\n    this.useSmartIdealEdgeLengthCalculation = CoSEConstants.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION;\n    this.springConstant = FDLayoutConstants.DEFAULT_SPRING_STRENGTH;\n    this.repulsionConstant = FDLayoutConstants.DEFAULT_REPULSION_STRENGTH;\n    this.gravityConstant = FDLayoutConstants.DEFAULT_GRAVITY_STRENGTH;\n    this.compoundGravityConstant = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH;\n    this.gravityRangeFactor = FDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR;\n    this.compoundGravityRangeFactor = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR;\n\n    // variables for tree reduction support\n    this.prunedNodesAll = [];\n    this.growTreeIterations = 0;\n    this.afterGrowthIterations = 0;\n    this.isTreeGrowing = false;\n    this.isGrowthFinished = false;\n\n    // variables for cooling\n    this.coolingCycle = 0;\n    this.maxCoolingCycle = this.maxIterations / FDLayoutConstants.CONVERGENCE_CHECK_PERIOD;\n    this.finalTemperature = FDLayoutConstants.CONVERGENCE_CHECK_PERIOD / this.maxIterations;\n    this.coolingAdjuster = 1;\n  }\n};\n\nCoSELayout.prototype.layout = function () {\n  var createBendsAsNeeded = LayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED;\n  if (createBendsAsNeeded) {\n    this.createBendpoints();\n    this.graphManager.resetAllEdges();\n  }\n\n  this.level = 0;\n  return this.classicLayout();\n};\n\nCoSELayout.prototype.classicLayout = function () {\n  this.nodesWithGravity = this.calculateNodesToApplyGravitationTo();\n  this.graphManager.setAllNodesToApplyGravitation(this.nodesWithGravity);\n  this.calcNoOfChildrenForAllNodes();\n  this.graphManager.calcLowestCommonAncestors();\n  this.graphManager.calcInclusionTreeDepths();\n  this.graphManager.getRoot().calcEstimatedSize();\n  this.calcIdealEdgeLengths();\n\n  if (!this.incremental) {\n    var forest = this.getFlatForest();\n\n    // The graph associated with this layout is flat and a forest\n    if (forest.length > 0) {\n      this.positionNodesRadially(forest);\n    }\n    // The graph associated with this layout is not flat or a forest\n    else {\n        // Reduce the trees when incremental mode is not enabled and graph is not a forest \n        this.reduceTrees();\n        // Update nodes that gravity will be applied\n        this.graphManager.resetAllNodesToApplyGravitation();\n        var allNodes = new Set(this.getAllNodes());\n        var intersection = this.nodesWithGravity.filter(function (x) {\n          return allNodes.has(x);\n        });\n        this.graphManager.setAllNodesToApplyGravitation(intersection);\n\n        this.positionNodesRandomly();\n      }\n  } else {\n    if (CoSEConstants.TREE_REDUCTION_ON_INCREMENTAL) {\n      // Reduce the trees in incremental mode if only this constant is set to true \n      this.reduceTrees();\n      // Update nodes that gravity will be applied\n      this.graphManager.resetAllNodesToApplyGravitation();\n      var allNodes = new Set(this.getAllNodes());\n      var intersection = this.nodesWithGravity.filter(function (x) {\n        return allNodes.has(x);\n      });\n      this.graphManager.setAllNodesToApplyGravitation(intersection);\n    }\n  }\n\n  this.initSpringEmbedder();\n  this.runSpringEmbedder();\n\n  return true;\n};\n\nCoSELayout.prototype.tick = function () {\n  this.totalIterations++;\n\n  if (this.totalIterations === this.maxIterations && !this.isTreeGrowing && !this.isGrowthFinished) {\n    if (this.prunedNodesAll.length > 0) {\n      this.isTreeGrowing = true;\n    } else {\n      return true;\n    }\n  }\n\n  if (this.totalIterations % FDLayoutConstants.CONVERGENCE_CHECK_PERIOD == 0 && !this.isTreeGrowing && !this.isGrowthFinished) {\n    if (this.isConverged()) {\n      if (this.prunedNodesAll.length > 0) {\n        this.isTreeGrowing = true;\n      } else {\n        return true;\n      }\n    }\n\n    this.coolingCycle++;\n\n    if (this.layoutQuality == 0) {\n      // quality - \"draft\"\n      this.coolingAdjuster = this.coolingCycle;\n    } else if (this.layoutQuality == 1) {\n      // quality - \"default\"\n      this.coolingAdjuster = this.coolingCycle / 3;\n    }\n\n    // cooling schedule is based on http://www.btluke.com/simanf1.html -> cooling schedule 3\n    this.coolingFactor = Math.max(this.initialCoolingFactor - Math.pow(this.coolingCycle, Math.log(100 * (this.initialCoolingFactor - this.finalTemperature)) / Math.log(this.maxCoolingCycle)) / 100 * this.coolingAdjuster, this.finalTemperature);\n    this.animationPeriod = Math.ceil(this.initialAnimationPeriod * Math.sqrt(this.coolingFactor));\n  }\n  // Operations while tree is growing again \n  if (this.isTreeGrowing) {\n    if (this.growTreeIterations % 10 == 0) {\n      if (this.prunedNodesAll.length > 0) {\n        this.graphManager.updateBounds();\n        this.updateGrid();\n        this.growTree(this.prunedNodesAll);\n        // Update nodes that gravity will be applied\n        this.graphManager.resetAllNodesToApplyGravitation();\n        var allNodes = new Set(this.getAllNodes());\n        var intersection = this.nodesWithGravity.filter(function (x) {\n          return allNodes.has(x);\n        });\n        this.graphManager.setAllNodesToApplyGravitation(intersection);\n\n        this.graphManager.updateBounds();\n        this.updateGrid();\n        this.coolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL;\n      } else {\n        this.isTreeGrowing = false;\n        this.isGrowthFinished = true;\n      }\n    }\n    this.growTreeIterations++;\n  }\n  // Operations after growth is finished\n  if (this.isGrowthFinished) {\n    if (this.isConverged()) {\n      return true;\n    }\n    if (this.afterGrowthIterations % 10 == 0) {\n      this.graphManager.updateBounds();\n      this.updateGrid();\n    }\n    this.coolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL * ((100 - this.afterGrowthIterations) / 100);\n    this.afterGrowthIterations++;\n  }\n\n  var gridUpdateAllowed = !this.isTreeGrowing && !this.isGrowthFinished;\n  var forceToNodeSurroundingUpdate = this.growTreeIterations % 10 == 1 && this.isTreeGrowing || this.afterGrowthIterations % 10 == 1 && this.isGrowthFinished;\n\n  this.totalDisplacement = 0;\n  this.graphManager.updateBounds();\n  this.calcSpringForces();\n  this.calcRepulsionForces(gridUpdateAllowed, forceToNodeSurroundingUpdate);\n  this.calcGravitationalForces();\n  this.moveNodes();\n  this.animate();\n\n  return false; // Layout is not ended yet return false\n};\n\nCoSELayout.prototype.getPositionsData = function () {\n  var allNodes = this.graphManager.getAllNodes();\n  var pData = {};\n  for (var i = 0; i < allNodes.length; i++) {\n    var rect = allNodes[i].rect;\n    var id = allNodes[i].id;\n    pData[id] = {\n      id: id,\n      x: rect.getCenterX(),\n      y: rect.getCenterY(),\n      w: rect.width,\n      h: rect.height\n    };\n  }\n\n  return pData;\n};\n\nCoSELayout.prototype.runSpringEmbedder = function () {\n  this.initialAnimationPeriod = 25;\n  this.animationPeriod = this.initialAnimationPeriod;\n  var layoutEnded = false;\n\n  // If aminate option is 'during' signal that layout is supposed to start iterating\n  if (FDLayoutConstants.ANIMATE === 'during') {\n    this.emit('layoutstarted');\n  } else {\n    // If aminate option is 'during' tick() function will be called on index.js\n    while (!layoutEnded) {\n      layoutEnded = this.tick();\n    }\n\n    this.graphManager.updateBounds();\n  }\n};\n\nCoSELayout.prototype.calculateNodesToApplyGravitationTo = function () {\n  var nodeList = [];\n  var graph;\n\n  var graphs = this.graphManager.getGraphs();\n  var size = graphs.length;\n  var i;\n  for (i = 0; i < size; i++) {\n    graph = graphs[i];\n\n    graph.updateConnected();\n\n    if (!graph.isConnected) {\n      nodeList = nodeList.concat(graph.getNodes());\n    }\n  }\n\n  return nodeList;\n};\n\nCoSELayout.prototype.createBendpoints = function () {\n  var edges = [];\n  edges = edges.concat(this.graphManager.getAllEdges());\n  var visited = new Set();\n  var i;\n  for (i = 0; i < edges.length; i++) {\n    var edge = edges[i];\n\n    if (!visited.has(edge)) {\n      var source = edge.getSource();\n      var target = edge.getTarget();\n\n      if (source == target) {\n        edge.getBendpoints().push(new PointD());\n        edge.getBendpoints().push(new PointD());\n        this.createDummyNodesForBendpoints(edge);\n        visited.add(edge);\n      } else {\n        var edgeList = [];\n\n        edgeList = edgeList.concat(source.getEdgeListToNode(target));\n        edgeList = edgeList.concat(target.getEdgeListToNode(source));\n\n        if (!visited.has(edgeList[0])) {\n          if (edgeList.length > 1) {\n            var k;\n            for (k = 0; k < edgeList.length; k++) {\n              var multiEdge = edgeList[k];\n              multiEdge.getBendpoints().push(new PointD());\n              this.createDummyNodesForBendpoints(multiEdge);\n            }\n          }\n          edgeList.forEach(function (edge) {\n            visited.add(edge);\n          });\n        }\n      }\n    }\n\n    if (visited.size == edges.length) {\n      break;\n    }\n  }\n};\n\nCoSELayout.prototype.positionNodesRadially = function (forest) {\n  // We tile the trees to a grid row by row; first tree starts at (0,0)\n  var currentStartingPoint = new Point(0, 0);\n  var numberOfColumns = Math.ceil(Math.sqrt(forest.length));\n  var height = 0;\n  var currentY = 0;\n  var currentX = 0;\n  var point = new PointD(0, 0);\n\n  for (var i = 0; i < forest.length; i++) {\n    if (i % numberOfColumns == 0) {\n      // Start of a new row, make the x coordinate 0, increment the\n      // y coordinate with the max height of the previous row\n      currentX = 0;\n      currentY = height;\n\n      if (i != 0) {\n        currentY += CoSEConstants.DEFAULT_COMPONENT_SEPERATION;\n      }\n\n      height = 0;\n    }\n\n    var tree = forest[i];\n\n    // Find the center of the tree\n    var centerNode = Layout.findCenterOfTree(tree);\n\n    // Set the staring point of the next tree\n    currentStartingPoint.x = currentX;\n    currentStartingPoint.y = currentY;\n\n    // Do a radial layout starting with the center\n    point = CoSELayout.radialLayout(tree, centerNode, currentStartingPoint);\n\n    if (point.y > height) {\n      height = Math.floor(point.y);\n    }\n\n    currentX = Math.floor(point.x + CoSEConstants.DEFAULT_COMPONENT_SEPERATION);\n  }\n\n  this.transform(new PointD(LayoutConstants.WORLD_CENTER_X - point.x / 2, LayoutConstants.WORLD_CENTER_Y - point.y / 2));\n};\n\nCoSELayout.radialLayout = function (tree, centerNode, startingPoint) {\n  var radialSep = Math.max(this.maxDiagonalInTree(tree), CoSEConstants.DEFAULT_RADIAL_SEPARATION);\n  CoSELayout.branchRadialLayout(centerNode, null, 0, 359, 0, radialSep);\n  var bounds = LGraph.calculateBounds(tree);\n\n  var transform = new Transform();\n  transform.setDeviceOrgX(bounds.getMinX());\n  transform.setDeviceOrgY(bounds.getMinY());\n  transform.setWorldOrgX(startingPoint.x);\n  transform.setWorldOrgY(startingPoint.y);\n\n  for (var i = 0; i < tree.length; i++) {\n    var node = tree[i];\n    node.transform(transform);\n  }\n\n  var bottomRight = new PointD(bounds.getMaxX(), bounds.getMaxY());\n\n  return transform.inverseTransformPoint(bottomRight);\n};\n\nCoSELayout.branchRadialLayout = function (node, parentOfNode, startAngle, endAngle, distance, radialSeparation) {\n  // First, position this node by finding its angle.\n  var halfInterval = (endAngle - startAngle + 1) / 2;\n\n  if (halfInterval < 0) {\n    halfInterval += 180;\n  }\n\n  var nodeAngle = (halfInterval + startAngle) % 360;\n  var teta = nodeAngle * IGeometry.TWO_PI / 360;\n\n  // Make polar to java cordinate conversion.\n  var cos_teta = Math.cos(teta);\n  var x_ = distance * Math.cos(teta);\n  var y_ = distance * Math.sin(teta);\n\n  node.setCenter(x_, y_);\n\n  // Traverse all neighbors of this node and recursively call this\n  // function.\n  var neighborEdges = [];\n  neighborEdges = neighborEdges.concat(node.getEdges());\n  var childCount = neighborEdges.length;\n\n  if (parentOfNode != null) {\n    childCount--;\n  }\n\n  var branchCount = 0;\n\n  var incEdgesCount = neighborEdges.length;\n  var startIndex;\n\n  var edges = node.getEdgesBetween(parentOfNode);\n\n  // If there are multiple edges, prune them until there remains only one\n  // edge.\n  while (edges.length > 1) {\n    //neighborEdges.remove(edges.remove(0));\n    var temp = edges[0];\n    edges.splice(0, 1);\n    var index = neighborEdges.indexOf(temp);\n    if (index >= 0) {\n      neighborEdges.splice(index, 1);\n    }\n    incEdgesCount--;\n    childCount--;\n  }\n\n  if (parentOfNode != null) {\n    //assert edges.length == 1;\n    startIndex = (neighborEdges.indexOf(edges[0]) + 1) % incEdgesCount;\n  } else {\n    startIndex = 0;\n  }\n\n  var stepAngle = Math.abs(endAngle - startAngle) / childCount;\n\n  for (var i = startIndex; branchCount != childCount; i = ++i % incEdgesCount) {\n    var currentNeighbor = neighborEdges[i].getOtherEnd(node);\n\n    // Don't back traverse to root node in current tree.\n    if (currentNeighbor == parentOfNode) {\n      continue;\n    }\n\n    var childStartAngle = (startAngle + branchCount * stepAngle) % 360;\n    var childEndAngle = (childStartAngle + stepAngle) % 360;\n\n    CoSELayout.branchRadialLayout(currentNeighbor, node, childStartAngle, childEndAngle, distance + radialSeparation, radialSeparation);\n\n    branchCount++;\n  }\n};\n\nCoSELayout.maxDiagonalInTree = function (tree) {\n  var maxDiagonal = Integer.MIN_VALUE;\n\n  for (var i = 0; i < tree.length; i++) {\n    var node = tree[i];\n    var diagonal = node.getDiagonal();\n\n    if (diagonal > maxDiagonal) {\n      maxDiagonal = diagonal;\n    }\n  }\n\n  return maxDiagonal;\n};\n\nCoSELayout.prototype.calcRepulsionRange = function () {\n  // formula is 2 x (level + 1) x idealEdgeLength\n  return 2 * (this.level + 1) * this.idealEdgeLength;\n};\n\n// Tiling methods\n\n// Group zero degree members whose parents are not to be tiled, create dummy parents where needed and fill memberGroups by their dummp parent id's\nCoSELayout.prototype.groupZeroDegreeMembers = function () {\n  var self = this;\n  // array of [parent_id x oneDegreeNode_id]\n  var tempMemberGroups = {}; // A temporary map of parent node and its zero degree members\n  this.memberGroups = {}; // A map of dummy parent node and its zero degree members whose parents are not to be tiled\n  this.idToDummyNode = {}; // A map of id to dummy node \n\n  var zeroDegree = []; // List of zero degree nodes whose parents are not to be tiled\n  var allNodes = this.graphManager.getAllNodes();\n\n  // Fill zero degree list\n  for (var i = 0; i < allNodes.length; i++) {\n    var node = allNodes[i];\n    var parent = node.getParent();\n    // If a node has zero degree and its parent is not to be tiled if exists add that node to zeroDegres list\n    if (this.getNodeDegreeWithChildren(node) === 0 && (parent.id == undefined || !this.getToBeTiled(parent))) {\n      zeroDegree.push(node);\n    }\n  }\n\n  // Create a map of parent node and its zero degree members\n  for (var i = 0; i < zeroDegree.length; i++) {\n    var node = zeroDegree[i]; // Zero degree node itself\n    var p_id = node.getParent().id; // Parent id\n\n    if (typeof tempMemberGroups[p_id] === \"undefined\") tempMemberGroups[p_id] = [];\n\n    tempMemberGroups[p_id] = tempMemberGroups[p_id].concat(node); // Push node to the list belongs to its parent in tempMemberGroups\n  }\n\n  // If there are at least two nodes at a level, create a dummy compound for them\n  Object.keys(tempMemberGroups).forEach(function (p_id) {\n    if (tempMemberGroups[p_id].length > 1) {\n      var dummyCompoundId = \"DummyCompound_\" + p_id; // The id of dummy compound which will be created soon\n      self.memberGroups[dummyCompoundId] = tempMemberGroups[p_id]; // Add dummy compound to memberGroups\n\n      var parent = tempMemberGroups[p_id][0].getParent(); // The parent of zero degree nodes will be the parent of new dummy compound\n\n      // Create a dummy compound with calculated id\n      var dummyCompound = new CoSENode(self.graphManager);\n      dummyCompound.id = dummyCompoundId;\n      dummyCompound.paddingLeft = parent.paddingLeft || 0;\n      dummyCompound.paddingRight = parent.paddingRight || 0;\n      dummyCompound.paddingBottom = parent.paddingBottom || 0;\n      dummyCompound.paddingTop = parent.paddingTop || 0;\n\n      self.idToDummyNode[dummyCompoundId] = dummyCompound;\n\n      var dummyParentGraph = self.getGraphManager().add(self.newGraph(), dummyCompound);\n      var parentGraph = parent.getChild();\n\n      // Add dummy compound to parent the graph\n      parentGraph.add(dummyCompound);\n\n      // For each zero degree node in this level remove it from its parent graph and add it to the graph of dummy parent\n      for (var i = 0; i < tempMemberGroups[p_id].length; i++) {\n        var node = tempMemberGroups[p_id][i];\n\n        parentGraph.remove(node);\n        dummyParentGraph.add(node);\n      }\n    }\n  });\n};\n\nCoSELayout.prototype.clearCompounds = function () {\n  var childGraphMap = {};\n  var idToNode = {};\n\n  // Get compound ordering by finding the inner one first\n  this.performDFSOnCompounds();\n\n  for (var i = 0; i < this.compoundOrder.length; i++) {\n\n    idToNode[this.compoundOrder[i].id] = this.compoundOrder[i];\n    childGraphMap[this.compoundOrder[i].id] = [].concat(this.compoundOrder[i].getChild().getNodes());\n\n    // Remove children of compounds\n    this.graphManager.remove(this.compoundOrder[i].getChild());\n    this.compoundOrder[i].child = null;\n  }\n\n  this.graphManager.resetAllNodes();\n\n  // Tile the removed children\n  this.tileCompoundMembers(childGraphMap, idToNode);\n};\n\nCoSELayout.prototype.clearZeroDegreeMembers = function () {\n  var self = this;\n  var tiledZeroDegreePack = this.tiledZeroDegreePack = [];\n\n  Object.keys(this.memberGroups).forEach(function (id) {\n    var compoundNode = self.idToDummyNode[id]; // Get the dummy compound\n\n    tiledZeroDegreePack[id] = self.tileNodes(self.memberGroups[id], compoundNode.paddingLeft + compoundNode.paddingRight);\n\n    // Set the width and height of the dummy compound as calculated\n    compoundNode.rect.width = tiledZeroDegreePack[id].width;\n    compoundNode.rect.height = tiledZeroDegreePack[id].height;\n  });\n};\n\nCoSELayout.prototype.repopulateCompounds = function () {\n  for (var i = this.compoundOrder.length - 1; i >= 0; i--) {\n    var lCompoundNode = this.compoundOrder[i];\n    var id = lCompoundNode.id;\n    var horizontalMargin = lCompoundNode.paddingLeft;\n    var verticalMargin = lCompoundNode.paddingTop;\n\n    this.adjustLocations(this.tiledMemberPack[id], lCompoundNode.rect.x, lCompoundNode.rect.y, horizontalMargin, verticalMargin);\n  }\n};\n\nCoSELayout.prototype.repopulateZeroDegreeMembers = function () {\n  var self = this;\n  var tiledPack = this.tiledZeroDegreePack;\n\n  Object.keys(tiledPack).forEach(function (id) {\n    var compoundNode = self.idToDummyNode[id]; // Get the dummy compound by its id\n    var horizontalMargin = compoundNode.paddingLeft;\n    var verticalMargin = compoundNode.paddingTop;\n\n    // Adjust the positions of nodes wrt its compound\n    self.adjustLocations(tiledPack[id], compoundNode.rect.x, compoundNode.rect.y, horizontalMargin, verticalMargin);\n  });\n};\n\nCoSELayout.prototype.getToBeTiled = function (node) {\n  var id = node.id;\n  //firstly check the previous results\n  if (this.toBeTiled[id] != null) {\n    return this.toBeTiled[id];\n  }\n\n  //only compound nodes are to be tiled\n  var childGraph = node.getChild();\n  if (childGraph == null) {\n    this.toBeTiled[id] = false;\n    return false;\n  }\n\n  var children = childGraph.getNodes(); // Get the children nodes\n\n  //a compound node is not to be tiled if all of its compound children are not to be tiled\n  for (var i = 0; i < children.length; i++) {\n    var theChild = children[i];\n\n    if (this.getNodeDegree(theChild) > 0) {\n      this.toBeTiled[id] = false;\n      return false;\n    }\n\n    //pass the children not having the compound structure\n    if (theChild.getChild() == null) {\n      this.toBeTiled[theChild.id] = false;\n      continue;\n    }\n\n    if (!this.getToBeTiled(theChild)) {\n      this.toBeTiled[id] = false;\n      return false;\n    }\n  }\n  this.toBeTiled[id] = true;\n  return true;\n};\n\n// Get degree of a node depending of its edges and independent of its children\nCoSELayout.prototype.getNodeDegree = function (node) {\n  var id = node.id;\n  var edges = node.getEdges();\n  var degree = 0;\n\n  // For the edges connected\n  for (var i = 0; i < edges.length; i++) {\n    var edge = edges[i];\n    if (edge.getSource().id !== edge.getTarget().id) {\n      degree = degree + 1;\n    }\n  }\n  return degree;\n};\n\n// Get degree of a node with its children\nCoSELayout.prototype.getNodeDegreeWithChildren = function (node) {\n  var degree = this.getNodeDegree(node);\n  if (node.getChild() == null) {\n    return degree;\n  }\n  var children = node.getChild().getNodes();\n  for (var i = 0; i < children.length; i++) {\n    var child = children[i];\n    degree += this.getNodeDegreeWithChildren(child);\n  }\n  return degree;\n};\n\nCoSELayout.prototype.performDFSOnCompounds = function () {\n  this.compoundOrder = [];\n  this.fillCompexOrderByDFS(this.graphManager.getRoot().getNodes());\n};\n\nCoSELayout.prototype.fillCompexOrderByDFS = function (children) {\n  for (var i = 0; i < children.length; i++) {\n    var child = children[i];\n    if (child.getChild() != null) {\n      this.fillCompexOrderByDFS(child.getChild().getNodes());\n    }\n    if (this.getToBeTiled(child)) {\n      this.compoundOrder.push(child);\n    }\n  }\n};\n\n/**\n* This method places each zero degree member wrt given (x,y) coordinates (top left).\n*/\nCoSELayout.prototype.adjustLocations = function (organization, x, y, compoundHorizontalMargin, compoundVerticalMargin) {\n  x += compoundHorizontalMargin;\n  y += compoundVerticalMargin;\n\n  var left = x;\n\n  for (var i = 0; i < organization.rows.length; i++) {\n    var row = organization.rows[i];\n    x = left;\n    var maxHeight = 0;\n\n    for (var j = 0; j < row.length; j++) {\n      var lnode = row[j];\n\n      lnode.rect.x = x; // + lnode.rect.width / 2;\n      lnode.rect.y = y; // + lnode.rect.height / 2;\n\n      x += lnode.rect.width + organization.horizontalPadding;\n\n      if (lnode.rect.height > maxHeight) maxHeight = lnode.rect.height;\n    }\n\n    y += maxHeight + organization.verticalPadding;\n  }\n};\n\nCoSELayout.prototype.tileCompoundMembers = function (childGraphMap, idToNode) {\n  var self = this;\n  this.tiledMemberPack = [];\n\n  Object.keys(childGraphMap).forEach(function (id) {\n    // Get the compound node\n    var compoundNode = idToNode[id];\n\n    self.tiledMemberPack[id] = self.tileNodes(childGraphMap[id], compoundNode.paddingLeft + compoundNode.paddingRight);\n\n    compoundNode.rect.width = self.tiledMemberPack[id].width;\n    compoundNode.rect.height = self.tiledMemberPack[id].height;\n  });\n};\n\nCoSELayout.prototype.tileNodes = function (nodes, minWidth) {\n  var verticalPadding = CoSEConstants.TILING_PADDING_VERTICAL;\n  var horizontalPadding = CoSEConstants.TILING_PADDING_HORIZONTAL;\n  var organization = {\n    rows: [],\n    rowWidth: [],\n    rowHeight: [],\n    width: 0,\n    height: minWidth, // assume minHeight equals to minWidth\n    verticalPadding: verticalPadding,\n    horizontalPadding: horizontalPadding\n  };\n\n  // Sort the nodes in ascending order of their areas\n  nodes.sort(function (n1, n2) {\n    if (n1.rect.width * n1.rect.height > n2.rect.width * n2.rect.height) return -1;\n    if (n1.rect.width * n1.rect.height < n2.rect.width * n2.rect.height) return 1;\n    return 0;\n  });\n\n  // Create the organization -> tile members\n  for (var i = 0; i < nodes.length; i++) {\n    var lNode = nodes[i];\n\n    if (organization.rows.length == 0) {\n      this.insertNodeToRow(organization, lNode, 0, minWidth);\n    } else if (this.canAddHorizontal(organization, lNode.rect.width, lNode.rect.height)) {\n      this.insertNodeToRow(organization, lNode, this.getShortestRowIndex(organization), minWidth);\n    } else {\n      this.insertNodeToRow(organization, lNode, organization.rows.length, minWidth);\n    }\n\n    this.shiftToLastRow(organization);\n  }\n\n  return organization;\n};\n\nCoSELayout.prototype.insertNodeToRow = function (organization, node, rowIndex, minWidth) {\n  var minCompoundSize = minWidth;\n\n  // Add new row if needed\n  if (rowIndex == organization.rows.length) {\n    var secondDimension = [];\n\n    organization.rows.push(secondDimension);\n    organization.rowWidth.push(minCompoundSize);\n    organization.rowHeight.push(0);\n  }\n\n  // Update row width\n  var w = organization.rowWidth[rowIndex] + node.rect.width;\n\n  if (organization.rows[rowIndex].length > 0) {\n    w += organization.horizontalPadding;\n  }\n\n  organization.rowWidth[rowIndex] = w;\n  // Update compound width\n  if (organization.width < w) {\n    organization.width = w;\n  }\n\n  // Update height\n  var h = node.rect.height;\n  if (rowIndex > 0) h += organization.verticalPadding;\n\n  var extraHeight = 0;\n  if (h > organization.rowHeight[rowIndex]) {\n    extraHeight = organization.rowHeight[rowIndex];\n    organization.rowHeight[rowIndex] = h;\n    extraHeight = organization.rowHeight[rowIndex] - extraHeight;\n  }\n\n  organization.height += extraHeight;\n\n  // Insert node\n  organization.rows[rowIndex].push(node);\n};\n\n//Scans the rows of an organization and returns the one with the min width\nCoSELayout.prototype.getShortestRowIndex = function (organization) {\n  var r = -1;\n  var min = Number.MAX_VALUE;\n\n  for (var i = 0; i < organization.rows.length; i++) {\n    if (organization.rowWidth[i] < min) {\n      r = i;\n      min = organization.rowWidth[i];\n    }\n  }\n  return r;\n};\n\n//Scans the rows of an organization and returns the one with the max width\nCoSELayout.prototype.getLongestRowIndex = function (organization) {\n  var r = -1;\n  var max = Number.MIN_VALUE;\n\n  for (var i = 0; i < organization.rows.length; i++) {\n\n    if (organization.rowWidth[i] > max) {\n      r = i;\n      max = organization.rowWidth[i];\n    }\n  }\n\n  return r;\n};\n\n/**\n* This method checks whether adding extra width to the organization violates\n* the aspect ratio(1) or not.\n*/\nCoSELayout.prototype.canAddHorizontal = function (organization, extraWidth, extraHeight) {\n\n  var sri = this.getShortestRowIndex(organization);\n\n  if (sri < 0) {\n    return true;\n  }\n\n  var min = organization.rowWidth[sri];\n\n  if (min + organization.horizontalPadding + extraWidth <= organization.width) return true;\n\n  var hDiff = 0;\n\n  // Adding to an existing row\n  if (organization.rowHeight[sri] < extraHeight) {\n    if (sri > 0) hDiff = extraHeight + organization.verticalPadding - organization.rowHeight[sri];\n  }\n\n  var add_to_row_ratio;\n  if (organization.width - min >= extraWidth + organization.horizontalPadding) {\n    add_to_row_ratio = (organization.height + hDiff) / (min + extraWidth + organization.horizontalPadding);\n  } else {\n    add_to_row_ratio = (organization.height + hDiff) / organization.width;\n  }\n\n  // Adding a new row for this node\n  hDiff = extraHeight + organization.verticalPadding;\n  var add_new_row_ratio;\n  if (organization.width < extraWidth) {\n    add_new_row_ratio = (organization.height + hDiff) / extraWidth;\n  } else {\n    add_new_row_ratio = (organization.height + hDiff) / organization.width;\n  }\n\n  if (add_new_row_ratio < 1) add_new_row_ratio = 1 / add_new_row_ratio;\n\n  if (add_to_row_ratio < 1) add_to_row_ratio = 1 / add_to_row_ratio;\n\n  return add_to_row_ratio < add_new_row_ratio;\n};\n\n//If moving the last node from the longest row and adding it to the last\n//row makes the bounding box smaller, do it.\nCoSELayout.prototype.shiftToLastRow = function (organization) {\n  var longest = this.getLongestRowIndex(organization);\n  var last = organization.rowWidth.length - 1;\n  var row = organization.rows[longest];\n  var node = row[row.length - 1];\n\n  var diff = node.width + organization.horizontalPadding;\n\n  // Check if there is enough space on the last row\n  if (organization.width - organization.rowWidth[last] > diff && longest != last) {\n    // Remove the last element of the longest row\n    row.splice(-1, 1);\n\n    // Push it to the last row\n    organization.rows[last].push(node);\n\n    organization.rowWidth[longest] = organization.rowWidth[longest] - diff;\n    organization.rowWidth[last] = organization.rowWidth[last] + diff;\n    organization.width = organization.rowWidth[instance.getLongestRowIndex(organization)];\n\n    // Update heights of the organization\n    var maxHeight = Number.MIN_VALUE;\n    for (var i = 0; i < row.length; i++) {\n      if (row[i].height > maxHeight) maxHeight = row[i].height;\n    }\n    if (longest > 0) maxHeight += organization.verticalPadding;\n\n    var prevTotal = organization.rowHeight[longest] + organization.rowHeight[last];\n\n    organization.rowHeight[longest] = maxHeight;\n    if (organization.rowHeight[last] < node.height + organization.verticalPadding) organization.rowHeight[last] = node.height + organization.verticalPadding;\n\n    var finalTotal = organization.rowHeight[longest] + organization.rowHeight[last];\n    organization.height += finalTotal - prevTotal;\n\n    this.shiftToLastRow(organization);\n  }\n};\n\nCoSELayout.prototype.tilingPreLayout = function () {\n  if (CoSEConstants.TILE) {\n    // Find zero degree nodes and create a compound for each level\n    this.groupZeroDegreeMembers();\n    // Tile and clear children of each compound\n    this.clearCompounds();\n    // Separately tile and clear zero degree nodes for each level\n    this.clearZeroDegreeMembers();\n  }\n};\n\nCoSELayout.prototype.tilingPostLayout = function () {\n  if (CoSEConstants.TILE) {\n    this.repopulateZeroDegreeMembers();\n    this.repopulateCompounds();\n  }\n};\n\n// -----------------------------------------------------------------------------\n// Section: Tree Reduction methods\n// -----------------------------------------------------------------------------\n// Reduce trees \nCoSELayout.prototype.reduceTrees = function () {\n  var prunedNodesAll = [];\n  var containsLeaf = true;\n  var node;\n\n  while (containsLeaf) {\n    var allNodes = this.graphManager.getAllNodes();\n    var prunedNodesInStepTemp = [];\n    containsLeaf = false;\n\n    for (var i = 0; i < allNodes.length; i++) {\n      node = allNodes[i];\n      if (node.getEdges().length == 1 && !node.getEdges()[0].isInterGraph && node.getChild() == null) {\n        prunedNodesInStepTemp.push([node, node.getEdges()[0], node.getOwner()]);\n        containsLeaf = true;\n      }\n    }\n    if (containsLeaf == true) {\n      var prunedNodesInStep = [];\n      for (var j = 0; j < prunedNodesInStepTemp.length; j++) {\n        if (prunedNodesInStepTemp[j][0].getEdges().length == 1) {\n          prunedNodesInStep.push(prunedNodesInStepTemp[j]);\n          prunedNodesInStepTemp[j][0].getOwner().remove(prunedNodesInStepTemp[j][0]);\n        }\n      }\n      prunedNodesAll.push(prunedNodesInStep);\n      this.graphManager.resetAllNodes();\n      this.graphManager.resetAllEdges();\n    }\n  }\n  this.prunedNodesAll = prunedNodesAll;\n};\n\n// Grow tree one step \nCoSELayout.prototype.growTree = function (prunedNodesAll) {\n  var lengthOfPrunedNodesInStep = prunedNodesAll.length;\n  var prunedNodesInStep = prunedNodesAll[lengthOfPrunedNodesInStep - 1];\n\n  var nodeData;\n  for (var i = 0; i < prunedNodesInStep.length; i++) {\n    nodeData = prunedNodesInStep[i];\n\n    this.findPlaceforPrunedNode(nodeData);\n\n    nodeData[2].add(nodeData[0]);\n    nodeData[2].add(nodeData[1], nodeData[1].source, nodeData[1].target);\n  }\n\n  prunedNodesAll.splice(prunedNodesAll.length - 1, 1);\n  this.graphManager.resetAllNodes();\n  this.graphManager.resetAllEdges();\n};\n\n// Find an appropriate position to replace pruned node, this method can be improved\nCoSELayout.prototype.findPlaceforPrunedNode = function (nodeData) {\n\n  var gridForPrunedNode;\n  var nodeToConnect;\n  var prunedNode = nodeData[0];\n  if (prunedNode == nodeData[1].source) {\n    nodeToConnect = nodeData[1].target;\n  } else {\n    nodeToConnect = nodeData[1].source;\n  }\n  var startGridX = nodeToConnect.startX;\n  var finishGridX = nodeToConnect.finishX;\n  var startGridY = nodeToConnect.startY;\n  var finishGridY = nodeToConnect.finishY;\n\n  var upNodeCount = 0;\n  var downNodeCount = 0;\n  var rightNodeCount = 0;\n  var leftNodeCount = 0;\n  var controlRegions = [upNodeCount, rightNodeCount, downNodeCount, leftNodeCount];\n\n  if (startGridY > 0) {\n    for (var i = startGridX; i <= finishGridX; i++) {\n      controlRegions[0] += this.grid[i][startGridY - 1].length + this.grid[i][startGridY].length - 1;\n    }\n  }\n  if (finishGridX < this.grid.length - 1) {\n    for (var i = startGridY; i <= finishGridY; i++) {\n      controlRegions[1] += this.grid[finishGridX + 1][i].length + this.grid[finishGridX][i].length - 1;\n    }\n  }\n  if (finishGridY < this.grid[0].length - 1) {\n    for (var i = startGridX; i <= finishGridX; i++) {\n      controlRegions[2] += this.grid[i][finishGridY + 1].length + this.grid[i][finishGridY].length - 1;\n    }\n  }\n  if (startGridX > 0) {\n    for (var i = startGridY; i <= finishGridY; i++) {\n      controlRegions[3] += this.grid[startGridX - 1][i].length + this.grid[startGridX][i].length - 1;\n    }\n  }\n  var min = Integer.MAX_VALUE;\n  var minCount;\n  var minIndex;\n  for (var j = 0; j < controlRegions.length; j++) {\n    if (controlRegions[j] < min) {\n      min = controlRegions[j];\n      minCount = 1;\n      minIndex = j;\n    } else if (controlRegions[j] == min) {\n      minCount++;\n    }\n  }\n\n  if (minCount == 3 && min == 0) {\n    if (controlRegions[0] == 0 && controlRegions[1] == 0 && controlRegions[2] == 0) {\n      gridForPrunedNode = 1;\n    } else if (controlRegions[0] == 0 && controlRegions[1] == 0 && controlRegions[3] == 0) {\n      gridForPrunedNode = 0;\n    } else if (controlRegions[0] == 0 && controlRegions[2] == 0 && controlRegions[3] == 0) {\n      gridForPrunedNode = 3;\n    } else if (controlRegions[1] == 0 && controlRegions[2] == 0 && controlRegions[3] == 0) {\n      gridForPrunedNode = 2;\n    }\n  } else if (minCount == 2 && min == 0) {\n    var random = Math.floor(Math.random() * 2);\n    if (controlRegions[0] == 0 && controlRegions[1] == 0) {\n      ;\n      if (random == 0) {\n        gridForPrunedNode = 0;\n      } else {\n        gridForPrunedNode = 1;\n      }\n    } else if (controlRegions[0] == 0 && controlRegions[2] == 0) {\n      if (random == 0) {\n        gridForPrunedNode = 0;\n      } else {\n        gridForPrunedNode = 2;\n      }\n    } else if (controlRegions[0] == 0 && controlRegions[3] == 0) {\n      if (random == 0) {\n        gridForPrunedNode = 0;\n      } else {\n        gridForPrunedNode = 3;\n      }\n    } else if (controlRegions[1] == 0 && controlRegions[2] == 0) {\n      if (random == 0) {\n        gridForPrunedNode = 1;\n      } else {\n        gridForPrunedNode = 2;\n      }\n    } else if (controlRegions[1] == 0 && controlRegions[3] == 0) {\n      if (random == 0) {\n        gridForPrunedNode = 1;\n      } else {\n        gridForPrunedNode = 3;\n      }\n    } else {\n      if (random == 0) {\n        gridForPrunedNode = 2;\n      } else {\n        gridForPrunedNode = 3;\n      }\n    }\n  } else if (minCount == 4 && min == 0) {\n    var random = Math.floor(Math.random() * 4);\n    gridForPrunedNode = random;\n  } else {\n    gridForPrunedNode = minIndex;\n  }\n\n  if (gridForPrunedNode == 0) {\n    prunedNode.setCenter(nodeToConnect.getCenterX(), nodeToConnect.getCenterY() - nodeToConnect.getHeight() / 2 - FDLayoutConstants.DEFAULT_EDGE_LENGTH - prunedNode.getHeight() / 2);\n  } else if (gridForPrunedNode == 1) {\n    prunedNode.setCenter(nodeToConnect.getCenterX() + nodeToConnect.getWidth() / 2 + FDLayoutConstants.DEFAULT_EDGE_LENGTH + prunedNode.getWidth() / 2, nodeToConnect.getCenterY());\n  } else if (gridForPrunedNode == 2) {\n    prunedNode.setCenter(nodeToConnect.getCenterX(), nodeToConnect.getCenterY() + nodeToConnect.getHeight() / 2 + FDLayoutConstants.DEFAULT_EDGE_LENGTH + prunedNode.getHeight() / 2);\n  } else {\n    prunedNode.setCenter(nodeToConnect.getCenterX() - nodeToConnect.getWidth() / 2 - FDLayoutConstants.DEFAULT_EDGE_LENGTH - prunedNode.getWidth() / 2, nodeToConnect.getCenterY());\n  }\n};\n\nmodule.exports = CoSELayout;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar coseBase = {};\n\ncoseBase.layoutBase = __webpack_require__(0);\ncoseBase.CoSEConstants = __webpack_require__(1);\ncoseBase.CoSEEdge = __webpack_require__(2);\ncoseBase.CoSEGraph = __webpack_require__(3);\ncoseBase.CoSEGraphManager = __webpack_require__(4);\ncoseBase.CoSELayout = __webpack_require__(6);\ncoseBase.CoSENode = __webpack_require__(5);\n\nmodule.exports = coseBase;\n\n/***/ })\n/******/ ]);\n});"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1174, "column": 0}, "map": {"version":3,"sources":["file:///Users/vihuy/Downloads/Project/financial_advisor/nextjs-ai-chatbot-main/nextjs-ai-chatbot-main/node_modules/.pnpm/cytoscape-cose-bilkent%404.1.0_cytoscape%403.33.1/node_modules/cytoscape-cose-bilkent/cytoscape-cose-bilkent.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"cose-base\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"cose-base\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cytoscapeCoseBilkent\"] = factory(require(\"cose-base\"));\n\telse\n\t\troot[\"cytoscapeCoseBilkent\"] = factory(root[\"coseBase\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LayoutConstants = __webpack_require__(0).layoutBase.LayoutConstants;\nvar FDLayoutConstants = __webpack_require__(0).layoutBase.FDLayoutConstants;\nvar CoSEConstants = __webpack_require__(0).CoSEConstants;\nvar CoSELayout = __webpack_require__(0).CoSELayout;\nvar CoSENode = __webpack_require__(0).CoSENode;\nvar PointD = __webpack_require__(0).layoutBase.PointD;\nvar DimensionD = __webpack_require__(0).layoutBase.DimensionD;\n\nvar defaults = {\n  // Called on `layoutready`\n  ready: function ready() {},\n  // Called on `layoutstop`\n  stop: function stop() {},\n  // 'draft', 'default' or 'proof\" \n  // - 'draft' fast cooling rate \n  // - 'default' moderate cooling rate \n  // - \"proof\" slow cooling rate\n  quality: 'default',\n  // include labels in node dimensions\n  nodeDimensionsIncludeLabels: false,\n  // number of ticks per frame; higher is faster but more jerky\n  refresh: 30,\n  // Whether to fit the network view after when done\n  fit: true,\n  // Padding on fit\n  padding: 10,\n  // Whether to enable incremental mode\n  randomize: true,\n  // Node repulsion (non overlapping) multiplier\n  nodeRepulsion: 4500,\n  // Ideal edge (non nested) length\n  idealEdgeLength: 50,\n  // Divisor to compute edge forces\n  edgeElasticity: 0.45,\n  // Nesting factor (multiplier) to compute ideal edge length for nested edges\n  nestingFactor: 0.1,\n  // Gravity force (constant)\n  gravity: 0.25,\n  // Maximum number of iterations to perform\n  numIter: 2500,\n  // For enabling tiling\n  tile: true,\n  // Type of layout animation. The option set is {'during', 'end', false}\n  animate: 'end',\n  // Duration for animate:end\n  animationDuration: 500,\n  // Represents the amount of the vertical space to put between the zero degree members during the tiling operation(can also be a function)\n  tilingPaddingVertical: 10,\n  // Represents the amount of the horizontal space to put between the zero degree members during the tiling operation(can also be a function)\n  tilingPaddingHorizontal: 10,\n  // Gravity range (constant) for compounds\n  gravityRangeCompound: 1.5,\n  // Gravity force (constant) for compounds\n  gravityCompound: 1.0,\n  // Gravity range (constant)\n  gravityRange: 3.8,\n  // Initial cooling factor for incremental layout\n  initialEnergyOnIncremental: 0.5\n};\n\nfunction extend(defaults, options) {\n  var obj = {};\n\n  for (var i in defaults) {\n    obj[i] = defaults[i];\n  }\n\n  for (var i in options) {\n    obj[i] = options[i];\n  }\n\n  return obj;\n};\n\nfunction _CoSELayout(_options) {\n  this.options = extend(defaults, _options);\n  getUserOptions(this.options);\n}\n\nvar getUserOptions = function getUserOptions(options) {\n  if (options.nodeRepulsion != null) CoSEConstants.DEFAULT_REPULSION_STRENGTH = FDLayoutConstants.DEFAULT_REPULSION_STRENGTH = options.nodeRepulsion;\n  if (options.idealEdgeLength != null) CoSEConstants.DEFAULT_EDGE_LENGTH = FDLayoutConstants.DEFAULT_EDGE_LENGTH = options.idealEdgeLength;\n  if (options.edgeElasticity != null) CoSEConstants.DEFAULT_SPRING_STRENGTH = FDLayoutConstants.DEFAULT_SPRING_STRENGTH = options.edgeElasticity;\n  if (options.nestingFactor != null) CoSEConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR = FDLayoutConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR = options.nestingFactor;\n  if (options.gravity != null) CoSEConstants.DEFAULT_GRAVITY_STRENGTH = FDLayoutConstants.DEFAULT_GRAVITY_STRENGTH = options.gravity;\n  if (options.numIter != null) CoSEConstants.MAX_ITERATIONS = FDLayoutConstants.MAX_ITERATIONS = options.numIter;\n  if (options.gravityRange != null) CoSEConstants.DEFAULT_GRAVITY_RANGE_FACTOR = FDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR = options.gravityRange;\n  if (options.gravityCompound != null) CoSEConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH = options.gravityCompound;\n  if (options.gravityRangeCompound != null) CoSEConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR = options.gravityRangeCompound;\n  if (options.initialEnergyOnIncremental != null) CoSEConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL = options.initialEnergyOnIncremental;\n\n  if (options.quality == 'draft') LayoutConstants.QUALITY = 0;else if (options.quality == 'proof') LayoutConstants.QUALITY = 2;else LayoutConstants.QUALITY = 1;\n\n  CoSEConstants.NODE_DIMENSIONS_INCLUDE_LABELS = FDLayoutConstants.NODE_DIMENSIONS_INCLUDE_LABELS = LayoutConstants.NODE_DIMENSIONS_INCLUDE_LABELS = options.nodeDimensionsIncludeLabels;\n  CoSEConstants.DEFAULT_INCREMENTAL = FDLayoutConstants.DEFAULT_INCREMENTAL = LayoutConstants.DEFAULT_INCREMENTAL = !options.randomize;\n  CoSEConstants.ANIMATE = FDLayoutConstants.ANIMATE = LayoutConstants.ANIMATE = options.animate;\n  CoSEConstants.TILE = options.tile;\n  CoSEConstants.TILING_PADDING_VERTICAL = typeof options.tilingPaddingVertical === 'function' ? options.tilingPaddingVertical.call() : options.tilingPaddingVertical;\n  CoSEConstants.TILING_PADDING_HORIZONTAL = typeof options.tilingPaddingHorizontal === 'function' ? options.tilingPaddingHorizontal.call() : options.tilingPaddingHorizontal;\n};\n\n_CoSELayout.prototype.run = function () {\n  var ready;\n  var frameId;\n  var options = this.options;\n  var idToLNode = this.idToLNode = {};\n  var layout = this.layout = new CoSELayout();\n  var self = this;\n\n  self.stopped = false;\n\n  this.cy = this.options.cy;\n\n  this.cy.trigger({ type: 'layoutstart', layout: this });\n\n  var gm = layout.newGraphManager();\n  this.gm = gm;\n\n  var nodes = this.options.eles.nodes();\n  var edges = this.options.eles.edges();\n\n  this.root = gm.addRoot();\n  this.processChildrenList(this.root, this.getTopMostNodes(nodes), layout);\n\n  for (var i = 0; i < edges.length; i++) {\n    var edge = edges[i];\n    var sourceNode = this.idToLNode[edge.data(\"source\")];\n    var targetNode = this.idToLNode[edge.data(\"target\")];\n    if (sourceNode !== targetNode && sourceNode.getEdgesBetween(targetNode).length == 0) {\n      var e1 = gm.add(layout.newEdge(), sourceNode, targetNode);\n      e1.id = edge.id();\n    }\n  }\n\n  var getPositions = function getPositions(ele, i) {\n    if (typeof ele === \"number\") {\n      ele = i;\n    }\n    var theId = ele.data('id');\n    var lNode = self.idToLNode[theId];\n\n    return {\n      x: lNode.getRect().getCenterX(),\n      y: lNode.getRect().getCenterY()\n    };\n  };\n\n  /*\n   * Reposition nodes in iterations animatedly\n   */\n  var iterateAnimated = function iterateAnimated() {\n    // Thigs to perform after nodes are repositioned on screen\n    var afterReposition = function afterReposition() {\n      if (options.fit) {\n        options.cy.fit(options.eles, options.padding);\n      }\n\n      if (!ready) {\n        ready = true;\n        self.cy.one('layoutready', options.ready);\n        self.cy.trigger({ type: 'layoutready', layout: self });\n      }\n    };\n\n    var ticksPerFrame = self.options.refresh;\n    var isDone;\n\n    for (var i = 0; i < ticksPerFrame && !isDone; i++) {\n      isDone = self.stopped || self.layout.tick();\n    }\n\n    // If layout is done\n    if (isDone) {\n      // If the layout is not a sublayout and it is successful perform post layout.\n      if (layout.checkLayoutSuccess() && !layout.isSubLayout) {\n        layout.doPostLayout();\n      }\n\n      // If layout has a tilingPostLayout function property call it.\n      if (layout.tilingPostLayout) {\n        layout.tilingPostLayout();\n      }\n\n      layout.isLayoutFinished = true;\n\n      self.options.eles.nodes().positions(getPositions);\n\n      afterReposition();\n\n      // trigger layoutstop when the layout stops (e.g. finishes)\n      self.cy.one('layoutstop', self.options.stop);\n      self.cy.trigger({ type: 'layoutstop', layout: self });\n\n      if (frameId) {\n        cancelAnimationFrame(frameId);\n      }\n\n      ready = false;\n      return;\n    }\n\n    var animationData = self.layout.getPositionsData(); // Get positions of layout nodes note that all nodes may not be layout nodes because of tiling\n\n    // Position nodes, for the nodes whose id does not included in data (because they are removed from their parents and included in dummy compounds)\n    // use position of their ancestors or dummy ancestors\n    options.eles.nodes().positions(function (ele, i) {\n      if (typeof ele === \"number\") {\n        ele = i;\n      }\n      // If ele is a compound node, then its position will be defined by its children\n      if (!ele.isParent()) {\n        var theId = ele.id();\n        var pNode = animationData[theId];\n        var temp = ele;\n        // If pNode is undefined search until finding position data of its first ancestor (It may be dummy as well)\n        while (pNode == null) {\n          pNode = animationData[temp.data('parent')] || animationData['DummyCompound_' + temp.data('parent')];\n          animationData[theId] = pNode;\n          temp = temp.parent()[0];\n          if (temp == undefined) {\n            break;\n          }\n        }\n        if (pNode != null) {\n          return {\n            x: pNode.x,\n            y: pNode.y\n          };\n        } else {\n          return {\n            x: ele.position('x'),\n            y: ele.position('y')\n          };\n        }\n      }\n    });\n\n    afterReposition();\n\n    frameId = requestAnimationFrame(iterateAnimated);\n  };\n\n  /*\n  * Listen 'layoutstarted' event and start animated iteration if animate option is 'during'\n  */\n  layout.addListener('layoutstarted', function () {\n    if (self.options.animate === 'during') {\n      frameId = requestAnimationFrame(iterateAnimated);\n    }\n  });\n\n  layout.runLayout(); // Run cose layout\n\n  /*\n   * If animate option is not 'during' ('end' or false) perform these here (If it is 'during' similar things are already performed)\n   */\n  if (this.options.animate !== \"during\") {\n    self.options.eles.nodes().not(\":parent\").layoutPositions(self, self.options, getPositions); // Use layout positions to reposition the nodes it considers the options parameter\n    ready = false;\n  }\n\n  return this; // chaining\n};\n\n//Get the top most ones of a list of nodes\n_CoSELayout.prototype.getTopMostNodes = function (nodes) {\n  var nodesMap = {};\n  for (var i = 0; i < nodes.length; i++) {\n    nodesMap[nodes[i].id()] = true;\n  }\n  var roots = nodes.filter(function (ele, i) {\n    if (typeof ele === \"number\") {\n      ele = i;\n    }\n    var parent = ele.parent()[0];\n    while (parent != null) {\n      if (nodesMap[parent.id()]) {\n        return false;\n      }\n      parent = parent.parent()[0];\n    }\n    return true;\n  });\n\n  return roots;\n};\n\n_CoSELayout.prototype.processChildrenList = function (parent, children, layout) {\n  var size = children.length;\n  for (var i = 0; i < size; i++) {\n    var theChild = children[i];\n    var children_of_children = theChild.children();\n    var theNode;\n\n    var dimensions = theChild.layoutDimensions({\n      nodeDimensionsIncludeLabels: this.options.nodeDimensionsIncludeLabels\n    });\n\n    if (theChild.outerWidth() != null && theChild.outerHeight() != null) {\n      theNode = parent.add(new CoSENode(layout.graphManager, new PointD(theChild.position('x') - dimensions.w / 2, theChild.position('y') - dimensions.h / 2), new DimensionD(parseFloat(dimensions.w), parseFloat(dimensions.h))));\n    } else {\n      theNode = parent.add(new CoSENode(this.graphManager));\n    }\n    // Attach id to the layout node\n    theNode.id = theChild.data(\"id\");\n    // Attach the paddings of cy node to layout node\n    theNode.paddingLeft = parseInt(theChild.css('padding'));\n    theNode.paddingTop = parseInt(theChild.css('padding'));\n    theNode.paddingRight = parseInt(theChild.css('padding'));\n    theNode.paddingBottom = parseInt(theChild.css('padding'));\n\n    //Attach the label properties to compound if labels will be included in node dimensions  \n    if (this.options.nodeDimensionsIncludeLabels) {\n      if (theChild.isParent()) {\n        var labelWidth = theChild.boundingBox({ includeLabels: true, includeNodes: false }).w;\n        var labelHeight = theChild.boundingBox({ includeLabels: true, includeNodes: false }).h;\n        var labelPos = theChild.css(\"text-halign\");\n        theNode.labelWidth = labelWidth;\n        theNode.labelHeight = labelHeight;\n        theNode.labelPos = labelPos;\n      }\n    }\n\n    // Map the layout node\n    this.idToLNode[theChild.data(\"id\")] = theNode;\n\n    if (isNaN(theNode.rect.x)) {\n      theNode.rect.x = 0;\n    }\n\n    if (isNaN(theNode.rect.y)) {\n      theNode.rect.y = 0;\n    }\n\n    if (children_of_children != null && children_of_children.length > 0) {\n      var theNewGraph;\n      theNewGraph = layout.getGraphManager().add(layout.newGraph(), theNode);\n      this.processChildrenList(theNewGraph, children_of_children, layout);\n    }\n  }\n};\n\n/**\n * @brief : called on continuous layouts to stop them before they finish\n */\n_CoSELayout.prototype.stop = function () {\n  this.stopped = true;\n\n  return this; // chaining\n};\n\nvar register = function register(cytoscape) {\n  //  var Layout = getLayout( cytoscape );\n\n  cytoscape('layout', 'cose-bilkent', _CoSELayout);\n};\n\n// auto reg for globals\nif (typeof cytoscape !== 'undefined') {\n  register(cytoscape);\n}\n\nmodule.exports = register;\n\n/***/ })\n/******/ ]);\n});"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1575, "column": 0}, "map": {"version":3,"sources":["file:///Users/vihuy/Downloads/Project/financial_advisor/nextjs-ai-chatbot-main/nextjs-ai-chatbot-main/node_modules/.pnpm/mermaid%4011.11.0/node_modules/mermaid/dist/chunks/mermaid.core/cose-bilkent-S5V4N54A.mjs"],"sourcesContent":["import {\n  __name,\n  log\n} from \"./chunk-AGHRB4JF.mjs\";\n\n// src/rendering-util/layout-algorithms/cose-bilkent/cytoscape-setup.ts\nimport cytoscape from \"cytoscape\";\nimport coseBilkent from \"cytoscape-cose-bilkent\";\nimport { select } from \"d3\";\ncytoscape.use(coseBilkent);\nfunction addNodes(nodes, cy) {\n  nodes.forEach((node) => {\n    const nodeData = {\n      id: node.id,\n      labelText: node.label,\n      height: node.height,\n      width: node.width,\n      padding: node.padding ?? 0\n    };\n    Object.keys(node).forEach((key) => {\n      if (![\"id\", \"label\", \"height\", \"width\", \"padding\", \"x\", \"y\"].includes(key)) {\n        nodeData[key] = node[key];\n      }\n    });\n    cy.add({\n      group: \"nodes\",\n      data: nodeData,\n      position: {\n        x: node.x ?? 0,\n        y: node.y ?? 0\n      }\n    });\n  });\n}\n__name(addNodes, \"addNodes\");\nfunction addEdges(edges, cy) {\n  edges.forEach((edge) => {\n    const edgeData = {\n      id: edge.id,\n      source: edge.start,\n      target: edge.end\n    };\n    Object.keys(edge).forEach((key) => {\n      if (![\"id\", \"start\", \"end\"].includes(key)) {\n        edgeData[key] = edge[key];\n      }\n    });\n    cy.add({\n      group: \"edges\",\n      data: edgeData\n    });\n  });\n}\n__name(addEdges, \"addEdges\");\nfunction createCytoscapeInstance(data) {\n  return new Promise((resolve) => {\n    const renderEl = select(\"body\").append(\"div\").attr(\"id\", \"cy\").attr(\"style\", \"display:none\");\n    const cy = cytoscape({\n      container: document.getElementById(\"cy\"),\n      // container to render in\n      style: [\n        {\n          selector: \"edge\",\n          style: {\n            \"curve-style\": \"bezier\"\n          }\n        }\n      ]\n    });\n    renderEl.remove();\n    addNodes(data.nodes, cy);\n    addEdges(data.edges, cy);\n    cy.nodes().forEach(function(n) {\n      n.layoutDimensions = () => {\n        const nodeData = n.data();\n        return { w: nodeData.width, h: nodeData.height };\n      };\n    });\n    const layoutConfig = {\n      name: \"cose-bilkent\",\n      // @ts-ignore Types for cose-bilkent are not correct?\n      quality: \"proof\",\n      styleEnabled: false,\n      animate: false\n    };\n    cy.layout(layoutConfig).run();\n    cy.ready((e) => {\n      log.info(\"Cytoscape ready\", e);\n      resolve(cy);\n    });\n  });\n}\n__name(createCytoscapeInstance, \"createCytoscapeInstance\");\nfunction extractPositionedNodes(cy) {\n  return cy.nodes().map((node) => {\n    const data = node.data();\n    const position = node.position();\n    const positionedNode = {\n      id: data.id,\n      x: position.x,\n      y: position.y\n    };\n    Object.keys(data).forEach((key) => {\n      if (key !== \"id\") {\n        positionedNode[key] = data[key];\n      }\n    });\n    return positionedNode;\n  });\n}\n__name(extractPositionedNodes, \"extractPositionedNodes\");\nfunction extractPositionedEdges(cy) {\n  return cy.edges().map((edge) => {\n    const data = edge.data();\n    const rscratch = edge._private.rscratch;\n    const positionedEdge = {\n      id: data.id,\n      source: data.source,\n      target: data.target,\n      startX: rscratch.startX,\n      startY: rscratch.startY,\n      midX: rscratch.midX,\n      midY: rscratch.midY,\n      endX: rscratch.endX,\n      endY: rscratch.endY\n    };\n    Object.keys(data).forEach((key) => {\n      if (![\"id\", \"source\", \"target\"].includes(key)) {\n        positionedEdge[key] = data[key];\n      }\n    });\n    return positionedEdge;\n  });\n}\n__name(extractPositionedEdges, \"extractPositionedEdges\");\n\n// src/rendering-util/layout-algorithms/cose-bilkent/layout.ts\nasync function executeCoseBilkentLayout(data, _config) {\n  log.debug(\"Starting cose-bilkent layout algorithm\");\n  try {\n    validateLayoutData(data);\n    const cy = await createCytoscapeInstance(data);\n    const positionedNodes = extractPositionedNodes(cy);\n    const positionedEdges = extractPositionedEdges(cy);\n    log.debug(`Layout completed: ${positionedNodes.length} nodes, ${positionedEdges.length} edges`);\n    return {\n      nodes: positionedNodes,\n      edges: positionedEdges\n    };\n  } catch (error) {\n    log.error(\"Error in cose-bilkent layout algorithm:\", error);\n    throw error;\n  }\n}\n__name(executeCoseBilkentLayout, \"executeCoseBilkentLayout\");\nfunction validateLayoutData(data) {\n  if (!data) {\n    throw new Error(\"Layout data is required\");\n  }\n  if (!data.config) {\n    throw new Error(\"Configuration is required in layout data\");\n  }\n  if (!data.rootNode) {\n    throw new Error(\"Root node is required\");\n  }\n  if (!data.nodes || !Array.isArray(data.nodes)) {\n    throw new Error(\"No nodes found in layout data\");\n  }\n  if (!Array.isArray(data.edges)) {\n    throw new Error(\"Edges array is required in layout data\");\n  }\n  return true;\n}\n__name(validateLayoutData, \"validateLayoutData\");\n\n// src/rendering-util/layout-algorithms/cose-bilkent/render.ts\nvar render = /* @__PURE__ */ __name(async (data4Layout, svg, {\n  insertCluster,\n  insertEdge,\n  insertEdgeLabel,\n  insertMarkers,\n  insertNode,\n  log: log2,\n  positionEdgeLabel\n}, { algorithm: _algorithm }) => {\n  const nodeDb = {};\n  const clusterDb = {};\n  const element = svg.select(\"g\");\n  insertMarkers(element, data4Layout.markers, data4Layout.type, data4Layout.diagramId);\n  const subGraphsEl = element.insert(\"g\").attr(\"class\", \"subgraphs\");\n  const edgePaths = element.insert(\"g\").attr(\"class\", \"edgePaths\");\n  const edgeLabels = element.insert(\"g\").attr(\"class\", \"edgeLabels\");\n  const nodes = element.insert(\"g\").attr(\"class\", \"nodes\");\n  log2.debug(\"Inserting nodes into DOM for dimension calculation\");\n  await Promise.all(\n    data4Layout.nodes.map(async (node) => {\n      if (node.isGroup) {\n        const clusterNode = { ...node };\n        clusterDb[node.id] = clusterNode;\n        nodeDb[node.id] = clusterNode;\n        await insertCluster(subGraphsEl, node);\n      } else {\n        const nodeWithPosition = { ...node };\n        nodeDb[node.id] = nodeWithPosition;\n        const nodeEl = await insertNode(nodes, node, {\n          config: data4Layout.config,\n          dir: data4Layout.direction || \"TB\"\n        });\n        const boundingBox = nodeEl.node().getBBox();\n        nodeWithPosition.width = boundingBox.width;\n        nodeWithPosition.height = boundingBox.height;\n        nodeWithPosition.domId = nodeEl;\n        log2.debug(`Node ${node.id} dimensions: ${boundingBox.width}x${boundingBox.height}`);\n      }\n    })\n  );\n  log2.debug(\"Running cose-bilkent layout algorithm\");\n  const updatedLayoutData = {\n    ...data4Layout,\n    nodes: data4Layout.nodes.map((node) => {\n      const nodeWithDimensions = nodeDb[node.id];\n      return {\n        ...node,\n        width: nodeWithDimensions.width,\n        height: nodeWithDimensions.height\n      };\n    })\n  };\n  const layoutResult = await executeCoseBilkentLayout(updatedLayoutData, data4Layout.config);\n  log2.debug(\"Positioning nodes based on layout results\");\n  layoutResult.nodes.forEach((positionedNode) => {\n    const node = nodeDb[positionedNode.id];\n    if (node?.domId) {\n      node.domId.attr(\n        \"transform\",\n        `translate(${positionedNode.x}, ${positionedNode.y})`\n      );\n      node.x = positionedNode.x;\n      node.y = positionedNode.y;\n      log2.debug(`Positioned node ${node.id} at center (${positionedNode.x}, ${positionedNode.y})`);\n    }\n  });\n  layoutResult.edges.forEach((positionedEdge) => {\n    const edge = data4Layout.edges.find((e) => e.id === positionedEdge.id);\n    if (edge) {\n      edge.points = [\n        { x: positionedEdge.startX, y: positionedEdge.startY },\n        { x: positionedEdge.midX, y: positionedEdge.midY },\n        { x: positionedEdge.endX, y: positionedEdge.endY }\n      ];\n    }\n  });\n  log2.debug(\"Inserting and positioning edges\");\n  await Promise.all(\n    data4Layout.edges.map(async (edge) => {\n      const _edgeLabel = await insertEdgeLabel(edgeLabels, edge);\n      const startNode = nodeDb[edge.start ?? \"\"];\n      const endNode = nodeDb[edge.end ?? \"\"];\n      if (startNode && endNode) {\n        const positionedEdge = layoutResult.edges.find((e) => e.id === edge.id);\n        if (positionedEdge) {\n          log2.debug(\"APA01 positionedEdge\", positionedEdge);\n          const edgeWithPath = { ...edge };\n          const paths = insertEdge(\n            edgePaths,\n            edgeWithPath,\n            clusterDb,\n            data4Layout.type,\n            startNode,\n            endNode,\n            data4Layout.diagramId\n          );\n          positionEdgeLabel(edgeWithPath, paths);\n        } else {\n          const edgeWithPath = {\n            ...edge,\n            points: [\n              { x: startNode.x || 0, y: startNode.y || 0 },\n              { x: endNode.x || 0, y: endNode.y || 0 }\n            ]\n          };\n          const paths = insertEdge(\n            edgePaths,\n            edgeWithPath,\n            clusterDb,\n            data4Layout.type,\n            startNode,\n            endNode,\n            data4Layout.diagramId\n          );\n          positionEdgeLabel(edgeWithPath, paths);\n        }\n      }\n    })\n  );\n  log2.debug(\"Cose-bilkent rendering completed\");\n}, \"render\");\n\n// src/rendering-util/layout-algorithms/cose-bilkent/index.ts\nvar render2 = render;\nexport {\n  render2 as render\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}