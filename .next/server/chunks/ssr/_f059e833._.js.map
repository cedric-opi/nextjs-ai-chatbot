{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/vihuy/Downloads/Project/financial_advisor/nextjs-ai-chatbot-main/nextjs-ai-chatbot-main/lib/ai/providers.ts"],"sourcesContent":["import { createOpenAI, openai } from \"@ai-sdk/openai\";\n\nconst gatewayOpenAI = createOpenAI({\n  apiKey: process.env.AI_GATEWAY_API_KEY!,\n  baseURL: process.env.AI_GATEWAY_URL, // \"https://ai-gateway.vercel.sh/api/openai\"\n});\n\nexport const myProvider = {\n  languageModel(name: string) {\n    const map: Record<string, ReturnType<typeof gatewayOpenAI>> = {\n      \"title-model\": gatewayOpenAI(\"gpt-4o-mini\"),\n      \"chat-model\": gatewayOpenAI(\"gpt-4o\"),\n    };\n    return map[name] ?? gatewayOpenAI(name as any);\n  },\n};\n\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,gBAAgB,CAAA,GAAA,+OAAA,CAAA,eAAY,AAAD,EAAE;IACjC,QAAQ,QAAQ,GAAG,CAAC,kBAAkB;IACtC,SAAS,QAAQ,GAAG,CAAC,cAAc;AACrC;AAEO,MAAM,aAAa;IACxB,eAAc,IAAY;QACxB,MAAM,MAAwD;YAC5D,eAAe,cAAc;YAC7B,cAAc,cAAc;QAC9B;QACA,OAAO,GAAG,CAAC,KAAK,IAAI,cAAc;IACpC;AACF","debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/vihuy/Downloads/Project/financial_advisor/nextjs-ai-chatbot-main/nextjs-ai-chatbot-main/app/%28chat%29/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { generateText, type UIMessage } from \"ai\";\nimport { cookies } from \"next/headers\";\nimport type { VisibilityType } from \"@/components/visibility-selector\";\nimport { myProvider } from \"@/lib/ai/providers\";\nimport {\n  deleteMessagesByChatIdAfterTimestamp,\n  getMessageById,\n  updateChatVisiblityById,\n} from \"@/lib/db/queries\";\n\nexport async function saveChatModelAsCookie(model: string) {\n  const cookieStore = await cookies();\n  cookieStore.set(\"chat-model\", model);\n}\n\nexport async function generateTitleFromUserMessage({\n  message,\n}: {\n  message: UIMessage;\n}) {\n  const { text: title } = await generateText({\n    model: myProvider.languageModel(\"title-model\"),\n    system: `\\n\n    - you will generate a short title based on the first message a user begins a conversation with\n    - ensure it is not more than 80 characters long\n    - the title should be a summary of the user's message\n    - do not use quotes or colons`,\n    prompt: JSON.stringify(message),\n  });\n\n  return title;\n}\n\nexport async function deleteTrailingMessages({ id }: { id: string }) {\n  const [message] = await getMessageById({ id });\n\n  await deleteMessagesByChatIdAfterTimestamp({\n    chatId: message.chatId,\n    timestamp: message.createdAt,\n  });\n}\n\nexport async function updateChatVisibility({\n  chatId,\n  visibility,\n}: {\n  chatId: string;\n  visibility: VisibilityType;\n}) {\n  await updateChatVisiblityById({ chatId, visibility });\n}\n"],"names":[],"mappings":";;;;;;;;AAEA;AACA;AAEA;AACA;;;;;;;;AAMO,eAAe,sBAAsB,KAAa;IACvD,MAAM,cAAc,MAAM,CAAA,GAAA,oVAAA,CAAA,UAAO,AAAD;IAChC,YAAY,GAAG,CAAC,cAAc;AAChC;AAEO,eAAe,6BAA6B,EACjD,OAAO,EAGR;IACC,MAAM,EAAE,MAAM,KAAK,EAAE,GAAG,MAAM,CAAA,GAAA,yNAAA,CAAA,eAAY,AAAD,EAAE;QACzC,OAAO,sHAAA,CAAA,aAAU,CAAC,aAAa,CAAC;QAChC,QAAQ,CAAC;;;;iCAIoB,CAAC;QAC9B,QAAQ,KAAK,SAAS,CAAC;IACzB;IAEA,OAAO;AACT;AAEO,eAAe,uBAAuB,EAAE,EAAE,EAAkB;IACjE,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAA,GAAA,oHAAA,CAAA,iBAAc,AAAD,EAAE;QAAE;IAAG;IAE5C,MAAM,CAAA,GAAA,oHAAA,CAAA,uCAAoC,AAAD,EAAE;QACzC,QAAQ,QAAQ,MAAM;QACtB,WAAW,QAAQ,SAAS;IAC9B;AACF;AAEO,eAAe,qBAAqB,EACzC,MAAM,EACN,UAAU,EAIX;IACC,MAAM,CAAA,GAAA,oHAAA,CAAA,0BAAuB,AAAD,EAAE;QAAE;QAAQ;IAAW;AACrD;;;IAxCsB;IAKA;IAkBA;IASA;;AAhCA,ocAAA;AAKA,ocAAA;AAkBA,ocAAA;AASA,ocAAA","debugId":null}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":["file:///Users/vihuy/Downloads/Project/financial_advisor/nextjs-ai-chatbot-main/nextjs-ai-chatbot-main/artifacts/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { getSuggestionsByDocumentId } from \"@/lib/db/queries\";\n\nexport async function getSuggestions({ documentId }: { documentId: string }) {\n  const suggestions = await getSuggestionsByDocumentId({ documentId });\n  return suggestions ?? [];\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;;AAEO,eAAe,eAAe,EAAE,UAAU,EAA0B;IACzE,MAAM,cAAc,MAAM,CAAA,GAAA,oHAAA,CAAA,6BAA0B,AAAD,EAAE;QAAE;IAAW;IAClE,OAAO,eAAe,EAAE;AAC1B;;;IAHsB;;AAAA,ocAAA","debugId":null}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///Users/vihuy/Downloads/Project/financial_advisor/nextjs-ai-chatbot-main/nextjs-ai-chatbot-main/.next-internal/server/app/%28chat%29/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {updateChatVisibility as '402e9e0b9aac405bba42ae9b7b7d8d7ee0f695254d'} from 'ACTIONS_MODULE0'\nexport {saveChatModelAsCookie as '40c35b258ba4060854e3cf51bb20eb7255e0757f78'} from 'ACTIONS_MODULE0'\nexport {getSuggestions as '40d50d88dbbc74e29ad8d17f3ef65066dc6bb741c1'} from 'ACTIONS_MODULE1'\nexport {deleteTrailingMessages as '40da48a361eb455e41eabd1473efb11d7d387a18f1'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA;AAEA","debugId":null}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///Users/vihuy/Downloads/Project/financial_advisor/nextjs-ai-chatbot-main/nextjs-ai-chatbot-main/components/chat.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Chat = registerClientReference(\n    function() { throw new Error(\"Attempted to call Chat() from the server but Chat is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/chat.tsx <module evaluation>\",\n    \"Chat\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,OAAO,CAAA,GAAA,0cAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,qDACA","debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///Users/vihuy/Downloads/Project/financial_advisor/nextjs-ai-chatbot-main/nextjs-ai-chatbot-main/components/chat.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Chat = registerClientReference(\n    function() { throw new Error(\"Attempted to call Chat() from the server but Chat is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/chat.tsx\",\n    \"Chat\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,OAAO,CAAA,GAAA,0cAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,iCACA","debugId":null}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":["file:///Users/vihuy/Downloads/Project/financial_advisor/nextjs-ai-chatbot-main/nextjs-ai-chatbot-main/components/data-stream-handler.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DataStreamHandler = registerClientReference(\n    function() { throw new Error(\"Attempted to call DataStreamHandler() from the server but DataStreamHandler is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/data-stream-handler.tsx <module evaluation>\",\n    \"DataStreamHandler\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,0cAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,oEACA","debugId":null}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":["file:///Users/vihuy/Downloads/Project/financial_advisor/nextjs-ai-chatbot-main/nextjs-ai-chatbot-main/components/data-stream-handler.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DataStreamHandler = registerClientReference(\n    function() { throw new Error(\"Attempted to call DataStreamHandler() from the server but DataStreamHandler is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/data-stream-handler.tsx\",\n    \"DataStreamHandler\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,0cAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,gDACA","debugId":null}},
    {"offset": {"line": 273, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":["file:///Users/vihuy/Downloads/Project/financial_advisor/nextjs-ai-chatbot-main/nextjs-ai-chatbot-main/lib/ai/models.ts"],"sourcesContent":["export const DEFAULT_CHAT_MODEL: string = \"chat-model\";\n\nexport type ChatModel = {\n  id: string;\n  name: string;\n  description: string;\n};\n\nexport const chatModels: ChatModel[] = [\n  {\n    id: \"chat-model\",\n    name: \"Grok Vision\",\n    description: \"Advanced multimodal model with vision and text capabilities\",\n  },\n  {\n    id: \"chat-model-reasoning\",\n    name: \"Grok Reasoning\",\n    description:\n      \"Uses advanced chain-of-thought reasoning for complex problems\",\n  },\n];\n"],"names":[],"mappings":";;;;AAAO,MAAM,qBAA6B;AAQnC,MAAM,aAA0B;IACrC;QACE,IAAI;QACJ,MAAM;QACN,aAAa;IACf;IACA;QACE,IAAI;QACJ,MAAM;QACN,aACE;IACJ;CACD","debugId":null}},
    {"offset": {"line": 306, "column": 0}, "map": {"version":3,"sources":["file:///Users/vihuy/Downloads/Project/financial_advisor/nextjs-ai-chatbot-main/nextjs-ai-chatbot-main/app/%28chat%29/page.tsx"],"sourcesContent":["import { cookies } from \"next/headers\";\nimport { redirect } from \"next/navigation\";\nimport { Chat } from \"@/components/chat\";\nimport { DataStreamHandler } from \"@/components/data-stream-handler\";\nimport { DEFAULT_CHAT_MODEL } from \"@/lib/ai/models\";\nimport { generateUUID } from \"@/lib/utils\";\nimport { auth } from \"../(auth)/auth\";\n\nexport default async function Page() {\n  const session = await auth();\n\n  if (!session) {\n    redirect(\"/api/auth/guest\");\n  }\n\n  const id = generateUUID();\n\n  const cookieStore = await cookies();\n  const modelIdFromCookie = cookieStore.get(\"chat-model\");\n\n  if (!modelIdFromCookie) {\n    return (\n      <>\n        <Chat\n          autoResume={false}\n          id={id}\n          initialChatModel={DEFAULT_CHAT_MODEL}\n          initialMessages={[]}\n          initialVisibilityType=\"private\"\n          isReadonly={false}\n          key={id}\n        />\n        <DataStreamHandler />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Chat\n        autoResume={false}\n        id={id}\n        initialChatModel={modelIdFromCookie.value}\n        initialMessages={[]}\n        initialVisibilityType=\"private\"\n        isReadonly={false}\n        key={id}\n      />\n      <DataStreamHandler />\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAEe,eAAe;IAC5B,MAAM,UAAU,MAAM,CAAA,GAAA,uHAAA,CAAA,OAAI,AAAD;IAEzB,IAAI,CAAC,SAAS;QACZ,CAAA,GAAA,0YAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IAEA,MAAM,KAAK,CAAA,GAAA,4GAAA,CAAA,eAAY,AAAD;IAEtB,MAAM,cAAc,MAAM,CAAA,GAAA,oVAAA,CAAA,UAAO,AAAD;IAChC,MAAM,oBAAoB,YAAY,GAAG,CAAC;IAE1C,IAAI,CAAC,mBAAmB;QACtB,qBACE;;8BACE,mcAAC,mHAAA,CAAA,OAAI;oBACH,YAAY;oBACZ,IAAI;oBACJ,kBAAkB,mHAAA,CAAA,qBAAkB;oBACpC,iBAAiB,EAAE;oBACnB,uBAAsB;oBACtB,YAAY;mBACP;;;;;8BAEP,mcAAC,wIAAA,CAAA,oBAAiB;;;;;;;IAGxB;IAEA,qBACE;;0BACE,mcAAC,mHAAA,CAAA,OAAI;gBACH,YAAY;gBACZ,IAAI;gBACJ,kBAAkB,kBAAkB,KAAK;gBACzC,iBAAiB,EAAE;gBACnB,uBAAsB;gBACtB,YAAY;eACP;;;;;0BAEP,mcAAC,wIAAA,CAAA,oBAAiB;;;;;;;AAGxB","debugId":null}}]
}